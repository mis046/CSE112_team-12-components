class CoreHello extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(document.createElement("slot"))}static get observedAttributes(){return["lang","rainbow"]}connectedCallback(){this.hasAttribute("rainbow")?this.toggleRainbow("true"):this.toggleRainbow("false")}attributeChangedCallback(a,b,c){let d=this.getAttribute(a);d=c,"lang"==a?this.updateText(d,this.innerText):"rainbow"==a&&(this.hasAttribute("rainbow")?this.toggleRainbow("true"):this.toggleRainbow("false"))}disconnectedCallback(){}updateText(a,b){let c=this.innerText.split(" "),d=c[c.length-1];if("fr"==a){this.innerText="Salut Monde "+d}else if("sp"==a){this.innerText="Hola Mundo "+d}else if("en"==a){this.innerText="Hello World "+d}}toggleRainbow(a){"true"==a?this.classList.add("color-text-flow"):"false"==a&&this.classList.remove("color-text-flow")}}customElements.define("core-hello",CoreHello);const jjInputNum=()=>{const a=document.createElement("template");a.innerHTML="<style>\n    button, p {\n        display: inline-block;\n    }\n\n    input[type=\"number\"] {\n    -webkit-appearance: textfield;\n        -moz-appearance: textfield;\n            appearance: textfield;\n    }\n\n    input[type=number]::-webkit-inner-spin-button, \n    input[type=number]::-webkit-outer-spin-button { \n    -webkit-appearance: none;\n    }\n\n    .jj-input-number {\n        border: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n    }\n\n    .border-blue {\n        border-color: var(--border-color,#75baff);\n    }\n\n    .color-blue {\n        color: var(--color,#75baff);\n    }\n\n    .decrement-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-right: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--decrement-color);\n    }\n\n    .increment-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-left: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--increment-color);\n    }\n\n    .button-container {\n        width:40%;\n        height: 100%;\n        float:right;\n        display: flex;\n        flex-direction: column;\n        padding: 0px;\n    }\n\n    .increment-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-bottom: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n\n    .decrement-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n    \n    .input-field {\n        width: 60%;\n        height: 100%;\n        font-size: 14px;\n        text-align: center;\n        border: none;\n        padding: 0px;\n        font-family: var(--font, Arial);\n    }\n\n    .disabled {\n        pointer-events:none;\n        opacity: 0.4;\n    }\n\n    .small {\n        width: 200px;\n        height: 40px;\n    }\n\n    .large {\n        width: 250px;\n        height: 55px;\n    }\n  </style>\n  <div class=\"jj-input-number\">\n    <button aria-label=\"decrement\" class=\"decrement-btn\" id=\"decrementBtn\">-</button><!--\n    --><input id=\"jj-inputBoxNum\" type = \"text\" class=\"input-field\"></input><!--\n    --><button aria-label=\"increment\" class=\"increment-btn\" id=\"incrementBtn\">+</button>\n  </div>\n";const b=document.createElement("template");b.innerHTML="<style>\n    button, p {\n        display: inline-block;\n    }\n\n    input[type=\"number\"] {\n    -webkit-appearance: textfield;\n        -moz-appearance: textfield;\n            appearance: textfield;\n    }\n\n    input[type=number]::-webkit-inner-spin-button, \n    input[type=number]::-webkit-outer-spin-button { \n    -webkit-appearance: none;\n    }\n\n    .jj-input-number {\n        border: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n    }\n\n    .border-blue {\n        border-color: var(--border-color,#75baff);\n    }\n\n    .color-blue {\n        color: var(--color,#75baff);\n    }\n\n    .decrement-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-right: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--decrement-color);\n    }\n\n    .increment-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-left: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--increment-color);\n    }\n\n    .button-container {\n        width:40%;\n        height: 100%;\n        float:right;\n        display: flex;\n        flex-direction: column;\n        padding: 0px;\n    }\n\n    .increment-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-bottom: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n\n    .decrement-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n    \n    .input-field {\n        width: 60%;\n        height: 100%;\n        font-size: 14px;\n        text-align: center;\n        border: none;\n        padding: 0px;\n        font-family: var(--font, Arial);\n    }\n\n    .disabled {\n        pointer-events:none;\n        opacity: 0.4;\n    }\n\n    .small {\n        width: 200px;\n        height: 40px;\n    }\n\n    .large {\n        width: 250px;\n        height: 55px;\n    }\n  </style>\n  <div class=\"jj-input-number\">\n    <input id=\"jj-inputBoxNum\" type = \"text\" class=\"input-field\"></input>\n    <div class = \"button-container\">\n      <button aria-label=\"increment\" class=\"increment-btn-2\" id=\"incrementBtn\">&#708;</button>\n      <button aria-label=\"decrement\" class=\"decrement-btn-2\" id=\"decrementBtn\">&#709;</button>\n    </div>\n  </div>\n";class JJInputNum extends HTMLElement{set value(a){return this.inputDiv.classList.contains("disabled")?void 0:""===a?(this._value=this.trans(""),void(this.valueElement.value="")):void(this.trans(a)>=this.valueElement.max?(a=this.valueElement.max,this.incrementButton.classList.add("disabled")):this.incrementButton.classList.remove("disabled"),this.trans(a)<=this.valueElement.min?(a=this.valueElement.min,this.decrementButton.classList.add("disabled")):this.decrementButton.classList.remove("disabled"),this._value=this.trans(a),isNaN(this._value)?(this._value=this.trans(""),this.valueElement.value=""):this.valueElement.value=parseFloat(this._value).toFixed(this.precision))}get value(){return this._value}set size(a){this._size=this.trans(a)}get size(){return this._size}set step(a){this._step=this.trans(a)}get step(){return this._step}set position(a){this._position=a}get position(){return this._position}set precision(a){this._precision=a}get precision(){return this._precision}static get observedAttributes(){return["controls","min","max","step","size","disabled","placeholder","value","controls-position","precision"]}connectedCallback(){this.hasAttribute("min")||(this.valueElement.min=Number.NEGATIVE_INFINITY),this.hasAttribute("max")||(this.valueElement.max=Number.POSITIVE_INFINITY),this.hasAttribute("step")||(this.step=1),this.hasAttribute("size")||(this.inputDiv.className+=" small"),this.hasAttribute("value")||(this.value=this.valueElement.min),this.hasAttribute("precision")||(this.precision=0)}attributeChangedCallback(a,b,c){"done"!==this.position&&this.load();let d=0;"undefined"!==this.precision&&(d=this.precision);"min"===a?(this.valueElement.min=this.trans(c),this.value=this.value):"max"===a?(this.valueElement.max=this.trans(c),this.value=this.value):"step"===a?this.step=this.trans(c):"size"===a?(this.inputDiv.classList.remove(b),this.inputDiv.classList.add(c)):"disabled"===a?""==c||"true"==c?this.inputDiv.classList.add("disabled"):this.inputDiv.classList.remove("disabled"):"placeholder"===a?this.valueElement.setAttribute("placeholder",c):"value"===a?this.value=this.trans(c):"controls"===a?"false"===c?(this.incrementButton.style.display="none",this.decrementButton.style.display="none",this.valueElement.style.width="99%"):(this.incrementButton.style.display="inline-block",this.decrementButton.style.display="inline-block",this.valueElement.style.width="59%"):"precision"===a?0<=parseInt(c)&&(this.precision=parseInt(c),this.value=this.trans(this.value)):void 0;this.position="done"}constructor(){super(),this.root=this.attachShadow({mode:"open"})}trans(a){return parseFloat(parseFloat(a).toFixed(this.precision))}load(){var c;"right"===this.getAttribute("controls-position")?(this.root.appendChild(b.content.cloneNode(!0)),this.inputDiv=this.root.querySelector("div"),this.valueElement=this.root.querySelector("input"),this.incrementButton=this.root.querySelectorAll("button")[0],this.decrementButton=this.root.querySelectorAll("button")[1]):(this.root.appendChild(a.content.cloneNode(!0)),this.inputDiv=this.root.querySelector("div"),this.valueElement=this.root.querySelector("input"),this.incrementButton=this.root.querySelectorAll("button")[1],this.decrementButton=this.root.querySelectorAll("button")[0]),this.incrementButton.addEventListener("mousedown",()=>{if(this.valueElement.max>=this.value+this.step){this.value+=this.step,this.setAttribute("value",this.value);let a=this;c=setInterval(function(){a.value+=a.step,a.setAttribute("value",a.value)},400),this.decrementButton.classList.remove("disabled"),this.valueElement.max<=this.value&&this.incrementButton.classList.add("disabled")}}),this.incrementButton.addEventListener("mouseleave",function(){clearInterval(c)}),this.incrementButton.addEventListener("mouseup",function(){clearInterval(c)}),this.decrementButton.addEventListener("mousedown",()=>{if(this.valueElement.min<=this.value-this.step){this.value-=this.step,this.setAttribute("value",this.value);let a=this;c=setInterval(function(){a.value-=a.step,a.setAttribute("value",a.value)},400),this.incrementButton.classList.remove("disabled"),this.valueElement.min>=this.value&&this.decrementButton.classList.add("disabled")}}),this.decrementButton.addEventListener("mouseleave",function(){clearInterval(c)}),this.decrementButton.addEventListener("mouseup",function(){clearInterval(c)}),this.decrementButton.addEventListener("mouseover",()=>{this.inputDiv.classList.add("border-blue"),this.decrementButton.classList.add("color-blue")}),this.decrementButton.addEventListener("mouseout",()=>{this.inputDiv.classList.remove("border-blue"),this.incrementButton.classList.remove("color-blue")}),this.incrementButton.addEventListener("mouseover",()=>{this.inputDiv.classList.add("border-blue"),this.incrementButton.classList.add("color-blue")}),this.incrementButton.addEventListener("mouseout",()=>{this.inputDiv.classList.remove("border-blue"),this.incrementButton.classList.remove("color-blue")}),this.valueElement.addEventListener("keydown",a=>{const b=a.key;let c=this.valueElement.value;if("Backspace"===b||"Delete"===b)if(1==c.length||0==c.length)this.value="";else return void(this.valueElement.value=c.substring(0,c.length));"Enter"===b&&(this.value=a.srcElement.value,this.setAttribute("value",this.value))}),this.valueElement.addEventListener("mouseover",a=>{this.value=a.srcElement.value,this.setAttribute("value",this.value),this.inputDiv.classList.add("border-blue")}),this.valueElement.addEventListener("mouseout",a=>{this.value=a.srcElement.value,this.setAttribute("value",this.value),this.inputDiv.classList.remove("border-blue")})}}customElements.define("jj-input-number",JJInputNum)};jjInputNum();const jjSlider=()=>{var a=Math.round;const b=document.createElement("template");b.innerHTML=`
    <style>
    @import url("https://unpkg.com/element-ui/lib/theme-chalk/slider.css");

    .el-slider {
        font-family: var(--tooltip-font, Helvetica, Arial, sans-serif);
        width: var(--slider-width);
        margin: 0 auto;
    }
    
    .el-slider__runway {
        background-color: var(--runway-color, #E4E7ED);
    }
    
    .el-slider__bar {
        background-color: var(--bar-color, #409EFF);
    }
    
    .el-slider__button {
        border: 2px solid var(--button-border-color, #409EFF);
        background-color: var(--button-color, #FFF);
    }
    
    .el-tooltip__popper.is-dark {
        background: var(--tooltip-color, #303133);
        color: var(--tooltip-text-color, #FFF);
    }
    
    .el-tooltip__popper[x-placement^=top] .popper__arrow,
    .el-tooltip__popper[x-placement^=top] .popper__arrow::after {
        border-top-color: var(--tooltip-color, #303133);
    }
    </style>
    <div role="slider" aria-valuemin="0" aria-valuemax="100" aria-orientation="horizontal" class="el-slider" aria-valuetext="0" aria-label="slider between 0 and 100">
        <div class="el-slider__runway" id="runway">
            <div class="el-slider__bar" style="left: 0%;"></div>
            <div tabindex="0" class="el-slider__button-wrapper" id="btn">
                <div class="el-tooltip el-slider__button" aria-describedby="el-tooltip-9861" tabindex="0"></div>
            </div>
        </div>
        <div role="tooltip" id="el-tooltip-9861" aria-hidden="false" class="el-tooltip__popper is-dark" x-placement="top">
            <span></span>
            <div x-arrow="" class="popper__arrow" style="left: 10.5px;"></div>
        </div>
    </div>
  `;class JJSlider extends HTMLElement{constructor(){super(),this.root=this.attachShadow({mode:"open"}),this.root.appendChild(b.content.cloneNode(!0)),this.sliderContainer=this.root.querySelector(".el-slider"),this.sliderRunway=this.root.querySelector(".el-slider__runway"),this.sliderBar=this.root.querySelector(".el-slider__bar"),this.sliderBtnWrapper=this.root.querySelector(".el-slider__button-wrapper"),this.sliderBtn=this.root.querySelector(".el-tooltip.el-slider__button"),this.tooltip=this.root.querySelector(".el-tooltip__popper"),this.tooltipSpan=this.root.querySelector(".el-tooltip__popper span"),this.getCurrentPosition=this.getCurrentPosition.bind(this),this.setInitPosition=this.setInitPosition.bind(this),this.setPosition=this.setPosition.bind(this),this.onSliderClick=this.onSliderClick.bind(this),this.onButtonHover=this.onButtonHover.bind(this),this.onButtonHoverEnd=this.onButtonHoverEnd.bind(this),this.onButtonDown=this.onButtonDown.bind(this),this.onDragStart=this.onDragStart.bind(this),this.onDragging=this.onDragging.bind(this),this.onDragEnd=this.onDragEnd.bind(this)}connectedCallback(){this.sliderRunway.addEventListener("mousedown",this.onSliderClick),this.sliderBtnWrapper.addEventListener("mouseover",this.onButtonHover),this.sliderBtnWrapper.addEventListener("mouseout",this.onButtonHoverEnd),this.sliderBtnWrapper.addEventListener("mousedown",this.onButtonDown),this._value=this.hasAttribute("value")?this.getAttribute("value"):0,this.min=this.hasAttribute("min")?this.getAttribute("min"):0,this.max=this.hasAttribute("max")?this.getAttribute("max"):100,this.setInitPosition(),this.tooltipSpan.innerHTML=a(this._value),this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: absolute; display: none;"}getCurrentPosition(){return 100*((this._value-this.min)/(this.max-this.min))+"%"}setInitPosition(){const a=100*((this._value-this.min)/(this.max-this.min));this.sliderBar.style.width=a+"%",this.sliderBtnWrapper.style.left=a+"%"}setPosition(b){let c=parseInt(this.min)+b*(this.max-this.min)/100;c>this.max?c=this.max:c<this.min&&(c=this.min),this._value=c,this.setAttribute("value",a(this._value));let d=b;100<d?d=100:0>d&&(d=0),this.sliderBar.style.width=d+"%",this.sliderBtnWrapper.style.left=d+"%",this.tooltipSpan.innerHTML=a(this._value);let e=this.sliderBtnWrapper.getBoundingClientRect();this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: absolute; top: "+(e.top-e.height)+"px; left: "+e.left+"px;"}onSliderClick(a){this.sliderSize=this.sliderContainer.clientWidth;const b=this.sliderContainer.getBoundingClientRect().left;this.setPosition(100*((a.clientX-b)/this.sliderSize)),this.onButtonDown(a)}onButtonHover(a){let b=this.sliderBtnWrapper.getBoundingClientRect();this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: absolute; top: "+(b.top-b.height)+"px; left: "+b.left+"px;"}onButtonHoverEnd(a){this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: absolute; display: none;"}onButtonDown(a){this.disabled||(a.preventDefault(),this.onDragStart(a),window.addEventListener("mousemove",this.onDragging),window.addEventListener("touchmove",this.onDragging),window.addEventListener("mouseup",this.onDragEnd),window.addEventListener("touchend",this.onDragEnd),window.addEventListener("contextmenu",this.onDragEnd))}onDragStart(a){this.dragging=!0,this.isClick=!0,"touchstart"===a.type&&(a.clientX=a.touches[0].clientX),this.startX=a.clientX,this.startPosition=parseFloat(this.getCurrentPosition()),this.newPosition=this.startPosition}onDragging(a){if(this.dragging){this.isClick=!1;let b=0;"touchmove"===a.type&&(a.clientX=a.touches[0].clientX),this.currentX=a.clientX,b=100*((this.currentX-this.startX)/this.sliderSize),this.newPosition=this.startPosition+b,this.setPosition(this.newPosition)}}onDragEnd(){this.dragging&&(setTimeout(()=>{this.dragging=!1,this.isClick||(this.setPosition(this.newPosition),this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: absolute; display: none;")},0),window.removeEventListener("mousemove",this.onDragging),window.removeEventListener("touchmove",this.onDragging),window.removeEventListener("mouseup",this.onDragEnd),window.removeEventListener("touchend",this.onDragEnd),window.removeEventListener("contextmenu",this.onDragEnd))}static get observedAttributes(){return["value","min","max"]}attributeChangedCallback(a,b,c){switch(a){case"value":break;case"min":break;case"max":}}get value(){return this.getAttribute("value")}get min(){return this.getAttribute("min")}get max(){return this.getAttribute("max")}set value(a){this.setAttribute("value",a)}set min(a){this.setAttribute("min",a)}set max(a){this.setAttribute("max",a)}}customElements.define("jj-slider",JJSlider)};jjSlider();